<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- mapper 클래스 선언 -->
<mapper namespace="com.metanet.project.mapper.JournalMapper">
 	    
 	<!-- 일지 목록 조건 -->
    <select id="journalSearch" resultType="com.metanet.project.dto.ListDTO">
        <![CDATA[
       select a.no, a.date, a.title, a.writer, a.location, a.action, a.fileyn, b.fileurl, b.filename 
       from journal as a left join file as b 
       on a.no = b.jno 
       order by date desc
       limit 0,5;
        ]]>
    </select>
    
    <!-- 일지 목록 조건 -->
    <select id="journalNext" parameterType="com.metanet.project.dto.NumDTO" resultType="com.metanet.project.dto.ListDTO">
        <![CDATA[
       select a.no, a.date, a.title, a.writer, a.location, a.action, a.fileyn, b.fileurl, b.filename 
       from journal as a left join file as b 
       on a.no = b.jno 
       order by date desc
        limit #{num},5;
        ]]>
    </select>
    
    <!-- 일지 목록 -->
    <select id="journalList" resultType="com.metanet.project.dto.JournalDTO">
        select
            *
        from journal
        where	date = #{date}
    </select>
    
    <!-- 일지 세부 사항  -->
    <select id="detail" parameterType="int" resultType="com.metanet.project.dto.JournalDTO">
        select
            *
        from journal
        where
            no = #{no}
    </select>
    
    <!-- 파일 관련 데이터 select -->
	<select id="fileDetail" parameterType="int" resultType="com.metanet.project.dto.FileDTO">
	    select
	        *
	    from file
	    where
	        jno = #{jno}
	</select>
    
    <!-- 일지 기록 -->
    <insert id="journalInsert" parameterType="com.metanet.project.dto.JournalDTO" useGeneratedKeys="true" keyProperty="no">
        insert into
        journal (no, date, title, action, planned, description, fileyn, location, writer)
        values(#{no}, #{date}, #{title},#{action},#{planned},#{description}, #{fileyn}, #{location}, #{writer}) 
    </insert>
    
    <!-- 파일 관련 데이터 저장 -->
    <insert id="fileInsert" parameterType="com.metanet.project.dto.FileDTO">
        insert into
        file (fno, jno, filename, filerealname, fileurl)
	    values (#{fno}, #{jno},#{fileName},#{fileRealName},#{fileUrl})
	</insert>
	
    <!-- 일지 수정 -->
    <update id="journalUpdate" parameterType="com.metanet.project.dto.JournalDTO">
        update journal
            set            
            action = #{action},
            planned = #{planned},
            description = #{description},
            date = #{date},
            fileyn = #{fileyn},
            location = #{location},
            writer = #{writer}
        where no = #{no}
    </update>
    
    <!-- 일지 삭제 -->
    <delete id="journalDelete" parameterType="int">
        delete from journal where no = #{no}
    </delete>
    
    <!-- 파일 삭제 -->
    <delete id="fileDelete" parameterType="int">
        delete from file where jno = #{jno};
    </delete>
    
    <!-- 시간 테이블 행 개수 파악 -->
    <select id="timeSelect" parameterType="int" resultType="int">
        select *
        from time
	</select>
	
	 <!-- 시간 정보 저장 -->
    <insert id="timeInsert" parameterType="com.metanet.project.dto.TimeDTO">
        insert into
        time (hour, minute)
	    values (#{hour}, #{minute})
	</insert>
    
    <!-- 시간 정보 수정 -->
    <update id="timeUpdate" parameterType="com.metanet.project.dto.TimeDTO">
	    update time
	    set
	    hour = #{hour},
	    minute = #{minute}
	</update>
	
	<!-- 파일 삭제 -->
    <delete id="timeDelete" parameterType="int">
        delete from time;
    </delete>
    
    <!-- 일지 목록 -->
    <select id="timeInfo" resultType="com.metanet.project.dto.TimeDTO">
        select
            *
        from time
    </select>
    
     <!-- 토큰 저장 -->
    <insert id="tokenUpdate" parameterType="com.metanet.project.dto.TokenDTO">
        insert ignore into
        token (token, userId)
	    values (#{token}, #{userID})
	</insert>
	
	<!-- 토큰 개수 파악 -->
    <select id="tokenCount" resultType="Integer">
        select count(*) from token
    </select>
	
	<!-- 일지 목록 -->
    <select id="tokenSelect" resultType="java.util.Map">
        select distinct token
        from token
    </select>
    
    <!-- 일지 목록 -->
    <select id="tokenSelectById" parameterType="com.metanet.project.dto.TokenDTO" resultType="java.util.Map">
        select distinct token
        from token where userId = #{userID}
    </select>
</mapper>